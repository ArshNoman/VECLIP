Welcome to VECLIP Official documentation 

== Basic Operations == 

add(number1, number2)::
	Takes 2 parameters, integers only, and adds them together.

subtract(number1, number2)::
	Takes 2 parameters, integers only, and subtracts the second parameter from the first parameter.
	
multiply(number1, number2)::
	Takes 2 parameters, integers only, and multiplies them together.

divide(number1, number2)::
	Takes 2 parameters, integers only, and divides the second parameter from the first parameter, returns a float.


* * * * * * * * * *

== Functions with exponents ==

sqr(number)::
	Returns the squared value of parameter, 'number'. With this function, the exponent is positive, if in need of a
	negative squared value, please see "power()".

sqrt(number)::
	Returns the square root value of parameter, 'number'.

cube(number)::
	Returns the cubed value of parameter, 'number'.  With this function, the exponent is positive, if in need of a
	negative squared value, please see "power()".

cubert(number)::
	Returns the cube root value of parameter, 'number'.

power(base, exponent)::
    Returns the value of the first parameter, base, to the power of the second parameter, exponent. The exponent parameter
    can be negative, but the returned value will be in a fraction.

* * * * * * * * * *

== Geometry ==

a_square(side_length)::
	Returns area of a square, takes in one length of the square's side as a parameter.

p_square(side_length)::
	Returns perimeter of a square, takes in one length fo the square's side as a parameter.

a_triangle(base_length, height)::
	Returns area of a triangle, takes the base length and height of the triangle as parameters.

p_triangle(slanted_length, base_length)::
	Returns the perimeter of a triangle, takes the side lengths and base length of the triangle as parameters.

a_rectangle(shortside_length, longside_length)::
	Returns the area of a rectangle, takes the 2 parallel side lengths of the rectangle as parameters.

p_rectangle(shortside_length, longside_length)::
	Returns the perimeter of a rectangle, takes the 2 parallel side lengths of the rectangle as parameters.

dgnl_square(side_length)::
	Returns the diagnoal length of a square, takes in a side length as a parameter.    

dgnl_rectangle(shortside_length, longside_length)::
	Returns the diagonal length of a rectangle, takes the 2 parallel side lengths of the rectangle as parameters.

a_circle(radius)::
	Returns the area of a circle with the radius of the figure as a given parameter.

c_circle(radius)::
	Returns the circumference of a circle with the radius of the shape as a given parameter.

v_sphere(radius)::
    Returns the volume of a sphere with the radius of the sphere as a given parameter.

sa_circle(radius)::
    Returns the surface area of the sphere with the radius of the shape as a given parameter.

sa_cuboid(width, length, height)::
	Return the surface area of a cuboid with 3 given parameters, the width, length and height.

sa_cylinder(radius, height)::
	Returns the surface area of a cylinder with 2 parameters, the radius and height of the cylinder.

sa_rightcylindrical_triangle(circumference, slanted_height)::
    Returns the surface area of a right cylindrical-triangle with the circumference and slanted height of the figure as parameters.

v_rightcylindrical_cone(radius, height)::
    Returns the volume of a right cylindrical cone with the radius and height of the figure as parameters.

v_triangularprism(length, base, height)::
	Returns the volume of a triangular prism with the length, base and height of the triangular prism as parameters.

* * * * * * * * * *

== Trigonometry ==

exterior_angle(i_angle1, i_angle2)::
    Takes in the other 2 interior angles of the triangle as parameters and returns the value of the exterior angle.

pythagorean(a, b)::
    Returns the hypotenuse value of the triangle with the other 2 sides given as parameters.

reverse_pythagorean(hypotenuse, x)::
    Takes the hypotenuse and the other given line length as parameters and returns the third line's length.

deg_sin(x)::
    Returns the DEGREE sine value of the parameter x.

deg_cos(x)::
    Returns the DEGREE cosine value of the parameter x.

deg_tan(x):
    Returns the DEGREE tangent value of the parameter x.

rad_sin(x)::
    Returns the RADIAN sine value of the parameter x.

rad_cos(x):
    Returns the RADIAN cosine value of the parameter x.

rad_tan(x):
    Returns the RADIAN tangent value of the parameter x.

* * * * * * * * * *

== Statistics ==

mean(*args)::
    Returns the average of a given set of integers, any length, as parameters.

mode(*args)::
    Returns the mode of a given set of integers, any length, as parameters. WILL NOT WORK IF THERE ARE 2 MODES.

range(*args)::
   Returns the range of a given set of integers, any length, as parameters.

median(*args)::
    Returns the average of a given set of integers, any length, as parameters.

* * * * * * * * * *

== Electricity ==

volts(watts=0, amperes=0, ohms=0)::
    Returns the volts value of a circuit with the 2 of the 3 parameters required. The should be passed as key value pairs.

ohms(watts=0, amperes=0, volts=0)::
    Returns the ohms value of a circuit with the 2 of the 3 parameters required. The should be passed as key value pairs.

amperes(ohms=0, watts=0, volts=0)::
    Returns the amperes value of a circuit with the 2 of the 3 parameters required. The should be passed as key value pairs.

watts(ohms=0, amperes=0, volts=0)::
    Returns the watts value of a circuit with the 2 of the 3 parameters required. The should be passed as key value pairs.